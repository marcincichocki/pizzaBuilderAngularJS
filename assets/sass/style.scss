/* ==========================================================================
   User styles

	 Feel free to modify this file

	 Sass(SCSS)
   ========================================================================== */




// variables
// ==========================================================================

$percentages: (10, 20, 30, 40, 50, 60, 70, 80, 90, 100);
$index: (1, 2, 3);


// keyframes
// ==========================================================================


// moveIn
@-webkit-keyframes moveIn {
    from {
        -webkit-transform: translateX(100%);
                transform: translateX(100%);
    }
    to {
        -webkit-transform: translateX(0);
                transform: translateX(0);
    }
}

@keyframes moveIn {
    from {
        -webkit-transform: translateX(100%);
                transform: translateX(100%);
    }
    to {
        -webkit-transform: translateX(0);
                transform: translateX(0);
    }
}

// moveViewFromUp
@-webkit-keyframes moveViewFromUp {
    from {
        top: 0;
    }
    to {
        top: -100%;
    }
}

@keyframes moveViewFromUp {
    from {
        top: 0;
    }
    to {
        top: -100%;
    }
}

// moveViewToDown
@-webkit-keyframes moveViewToDown {
    from {
        top: 100%;
    }
    to {
        top: 0;
    }
}

@keyframes moveViewToDown {
    from {
        top: 100%;
    }
    to {
        top: 0;
    }
}


// ngAnimation
// ==========================================================================

// item of list
.list-group-item.ng-enter {
    -webkit-animation: moveIn .7s ease;
            animation: moveIn .7s ease;
}

.list-group-item.ng-leave {
    -webkit-animation: moveIn .3s ease;
            animation: moveIn .3s ease;
    -webkit-animation-direction: reverse;
            animation-direction: reverse;
}

// ngView
.app.ng-leave {
    -webkit-animation: moveViewFromUp .4s ease-in;
            animation: moveViewFromUp .4s ease-in;
}

.app.ng-enter {
    -webkit-animation: moveViewToDown .4s ease-in;
            animation: moveViewToDown .4s ease-in;
}



// styles
// ==========================================================================


html,
body {
    height: 100%;
}


/* APP */

// wrapper for ngView
main {
    position: relative;

    height: calc(100% - 72px);
    overflow: hidden;
}

// ngView
.app {
    position: absolute;

    width: 100%;
    height: inherit;
}


/* pizza preview */

// container for images
.components {
    position: relative;

    width: 534px;
    height: 428px;
}

// image
.component {
    position: absolute;
    top: 50%;
    left: 50%;

    -webkit-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%);
}


/* pizza list */

.pizza-name {
    width: 70%;

    word-break: break-word;
}

.pizza-components {
    width: 70%;

    > span {
        font-size: .85em;

        color: #000;
    }
}

// container for search, edit and delete links in each pizza in pizza list
.controllers {
    position: absolute;
    top: 10px;
    right: 15px;

    font-size: 1.2em;
}


/* components list */

// fix checkbox to show centered verticlally near right border
.list-group-item > input[type="checkbox"] {
    position: absolute;
    top: 50%;
    right: 5%;

    margin: 0;

    -webkit-transform: translatey(-50%);
            transform: translatey(-50%);
}


/* add some additional styles to boostrap classes */
.list-group-item {
    font-weight: normal;

    cursor: pointer;

    &:hover {
        background: #eee;
    }
}

.list-group {
    overflow: hidden;
}

// allow to join .nav with .list-group(no double border)
.nav-list-group > li > a {
    border-bottom: 0 !important;
}

// add nice shadow to panels
.panel {
    box-shadow: 0 3px 7px -3px #000;
}

// make it fits layout better
.mark {
    padding: .3em;
    margin: 0 2px;

    color: #fff;
    border-radius: 2px;
    background-color: #55cc47;
}

/* helper classes */

// make progressive classes according to value(if higher then 
// backgroud-color is less transparent). Class changes every 10% up to 100%
@each $percent in $percentages {
    .percent#{$percent} {

        background-color: rgba(0,255,0, $percent / 200);
    }
}

// each category has own layer to display properly
// (.components are wrapped with div)
@each $id in $index {
    .layer#{$id} {

        z-index: $id;
    }
}

// pretty self explanatory classes
.fill {
    height: 100%;
}

.fill-max {
    height: inherit;
    max-height: 100%;
}

.panel-body-fill {
    height: calc(100% - 77px);
    overflow: auto;
}
